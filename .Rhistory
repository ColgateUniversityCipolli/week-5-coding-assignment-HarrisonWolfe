more.info.for.songs$arousal = arousal
#Doing it again!!!
aggresive = c()
happy = c()
party = c()
relaxed = c()
sad = c()
for(i in 1:length(more.info.for.songs$track)){
aggresive[i] = mean(more.info.for.songs$nn_aggressive[i], more.info.for.songs$eff_aggressive[i])
happy[i] = mean(more.info.for.songs$nn_happy[i], more.info.for.songs$eff_happy[i])
party[i] = mean(more.info.for.songs$nn_party[i], more.info.for.songs$eff_party[i])
relaxed[i] = mean(more.info.for.songs$nn_relax[i], more.info.for.songs$eff_relax[i])
sad[i] = mean(more.info.for.songs$nn_sad[i], more.info.for.songs$eff_sad[i])
}
more.info.for.songs$aggresive = aggresive
more.info.for.songs$happy = happy
more.info.for.songs$party = party
more.info.for.songs$relaxed = relaxed
more.info.for.songs$sad = sad
#KEEP ON GOING
acoustic = c()
electric = c()
for(i in 1:length(more.info.for.songs$track)){
acoustic[i] = mean(more.info.for.songs$nn_acoustic[i], more.info.for.songs$eff_acoustic[i])
electric[i] = mean(more.info.for.songs$nn_electronic[i], more.info.for.songs$eff_electronic[i])
}
more.info.for.songs$acoustic = acoustic
more.info.for.songs$electric = electric
#WHAT IS HAPPENING
instrumental = c()
for(i in 1:length(more.info.for.songs$track)){
instrumental[i] = mean(more.info.for.songs$nn_instrumental[i], more.info.for.songs$eff_instrumental[i])
}
more.info.for.songs$instrumental = instrumental
#WHY
timbreBright =c ()
for(i in 1:length(more.info.for.songs$track)){
timbreBright[i] = mean(more.info.for.songs$eff_timbre_bright[i])
}
more.info.for.songs$timbreBright = timbreBright
#Subsetting time
columns.i.want = c(1,2,3,50,51,52,53,54,55,56,57,58,59,60)
more.info.for.songs = more.info.for.songs[, columns.i.want]
#Woohoo
#Step 4
#Adding in a dataframe
LIWCOutput = read.csv("LIWCOutput/LIWCOutput.csv")
#Merging
two.of.three = merge(data.from.all.songs, more.info.for.songs)
final.df = merge(two.of.three, LIWCOutput)
#Chaning name
names(final.df)[which(names(final.df) == "function.")] = "funct"
#Taking away my extra row
final.df = final.df[,-142]
#Finding the track
which(final.df$track == "Allentown")
#Writing csv
#Without allentown
write.csv(final.df[-which(final.df$track == "Allentown"), ], file = "trainingdata.csv", row.names = F)
#Only allentown
write.csv(final.df[which(final.df$track == "Allentown"), ], file = "testingdata.csv", row.names = F)
#Some cool graphs
library(tidyverse)
####################################
# Load Data
####################################
dat <- read_csv("trainingdata.csv")
####################################
# Select data for plot
####################################
df <- dat %>%
dplyr::select("sad", "artist") %>%
filter(!is.na(!!sym("artist")))
####################################
# Create Plot
####################################
p <- ggplot(df, aes(x = !!sym("artist"), y = !!sym("sad"))) +
geom_boxplot(fill = "darkred", width = 0.5) +
get("theme_bw")() +
xlab("Artist") +
ylab("Sadness") +
ggtitle("Sadness Displayed by Artist", "")
####################################
# Print Plot
####################################
p
####################################
# Summarize Data
####################################
dat.summary <- dat %>%
select(!!sym("sad"), !!sym("artist")) %>%
group_by(!!sym("artist")) %>%
summarize(Observations = sum(!is.na(!!sym("sad"))), Mean = mean(!!sym("sad"), na.rm = T), `Standard Deviation` = sd(!!sym("sad"), na.rm = T), Min = min(!!sym("sad"), na.rm = T), Q1 = quantile(!!sym("sad"), probs = 0.25, na.rm = T), Median = median(!!sym("sad"), na.rm = T), Q3 = quantile(!!sym("sad"), probs = 0.75, na.rm = T), Max = max(!!sym("sad"), na.rm = T), IQR = IQR(!!sym("sad"), na.rm = T)) %>%
filter(!is.na(!!sym("artist"))) %>%
tidyr::complete(!!sym("artist")) %>%
mutate_if(is.numeric, round, 4)
missing.obs <- dat %>%
summarize(missing = sum(is.na(!!sym("sad")) | is.na(!!sym("artist")))) %>%
pull(missing)
dat.summary <- dat.summary %>%
ungroup() %>%
add_row(`:=`(!!sym("artist"), "Rows with Missing Data"), Observations = missing.obs, Mean = NA, `Standard Deviation` = NA, Min = NA, Q1 = NA, Median = NA, Q3 = NA, Max = NA, IQR = NA)
####################################
# Print Data Summary
####################################
dat.summary
library(tidyverse)
####################################
# Load Data
####################################
dat <- read_csv("trainingdata.csv")
####################################
# Select data for plot
####################################
df <- dat %>%
dplyr::select("timbreBright", "artist") %>%
filter(!is.na(!!sym("artist")))
####################################
# Create Plot
####################################
p <- ggplot(df, aes(x = !!sym("artist"), y = !!sym("timbreBright"))) +
geom_boxplot(fill = "darkred", width = 0.5) +
get("theme_bw")() +
xlab("Artist") +
ylab("Brightness in Timbre") +
ggtitle("Brightness in Timbre Displayed by Artist", "")
####################################
# Print Plot
####################################
p
####################################
# Summarize Data
####################################
dat.summary <- dat %>%
select(!!sym("timbreBright"), !!sym("artist")) %>%
group_by(!!sym("artist")) %>%
summarize(Observations = sum(!is.na(!!sym("timbreBright"))), Mean = mean(!!sym("timbreBright"), na.rm = T), `Standard Deviation` = sd(!!sym("timbreBright"), na.rm = T), Min = min(!!sym("timbreBright"), na.rm = T), Q1 = quantile(!!sym("timbreBright"), probs = 0.25, na.rm = T), Median = median(!!sym("timbreBright"), na.rm = T), Q3 = quantile(!!sym("timbreBright"), probs = 0.75, na.rm = T), Max = max(!!sym("timbreBright"), na.rm = T), IQR = IQR(!!sym("timbreBright"), na.rm = T)) %>%
filter(!is.na(!!sym("artist"))) %>%
tidyr::complete(!!sym("artist")) %>%
mutate_if(is.numeric, round, 4)
missing.obs <- dat %>%
summarize(missing = sum(is.na(!!sym("timbreBright")) | is.na(!!sym("artist")))) %>%
pull(missing)
dat.summary <- dat.summary %>%
ungroup() %>%
add_row(`:=`(!!sym("artist"), "Rows with Missing Data"), Observations = missing.obs, Mean = NA, `Standard Deviation` = NA, Min = NA, Q1 = NA, Median = NA, Q3 = NA, Max = NA, IQR = NA)
####################################
# Print Data Summary
####################################
dat.summary
library(tidyverse)
####################################
# Load Data
####################################
dat <- read_csv("trainingdata.csv")
####################################
# Select data for plot
####################################
df <- dat %>%
dplyr::select("arousal", "artist") %>%
filter(!is.na(!!sym("artist")))
####################################
# Create Plot
####################################
p <- ggplot(df, aes(x = !!sym("artist"), y = !!sym("arousal"))) +
geom_boxplot(fill = "darkred", width = 0.5) +
get("theme_bw")() +
xlab("Artists") +
ylab("Arousal") +
ggtitle("Arousal Displayed by Artist", "")
####################################
# Print Plot
####################################
p
####################################
# Summarize Data
####################################
dat.summary <- dat %>%
select(!!sym("arousal"), !!sym("artist")) %>%
group_by(!!sym("artist")) %>%
summarize(Observations = sum(!is.na(!!sym("arousal"))), Mean = mean(!!sym("arousal"), na.rm = T), `Standard Deviation` = sd(!!sym("arousal"), na.rm = T), Min = min(!!sym("arousal"), na.rm = T), Q1 = quantile(!!sym("arousal"), probs = 0.25, na.rm = T), Median = median(!!sym("arousal"), na.rm = T), Q3 = quantile(!!sym("arousal"), probs = 0.75, na.rm = T), Max = max(!!sym("arousal"), na.rm = T), IQR = IQR(!!sym("arousal"), na.rm = T)) %>%
filter(!is.na(!!sym("artist"))) %>%
tidyr::complete(!!sym("artist")) %>%
mutate_if(is.numeric, round, 4)
missing.obs <- dat %>%
summarize(missing = sum(is.na(!!sym("arousal")) | is.na(!!sym("artist")))) %>%
pull(missing)
dat.summary <- dat.summary %>%
ungroup() %>%
add_row(`:=`(!!sym("artist"), "Rows with Missing Data"), Observations = missing.obs, Mean = NA, `Standard Deviation` = NA, Min = NA, Q1 = NA, Median = NA, Q3 = NA, Max = NA, IQR = NA)
####################################
# Print Data Summary
####################################
dat.summary
final.df[which(final.df$track == "Allentown"), "arousal" ]
final.df[which(final.df$track == "Allentown"), "timbreBright" ]
final.df[which(final.df$track == "Allentown"), "sad" ]
data = read.csv("testingdata.csv")
data[which(data$track == "Allentown"), "sad" ] #Sadness from ``Allentown"
data[which(data$track == "Allentown"), "timbreBright" ] #Brightness of Timbre from ``Allentown"
data[which(data$track == "Allentown"), "arousal" ] #Arousal from ``Allentown"
View(more.info.for.songs)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
library(stringr)
library(jsonlite)
library(tidyverse)
current.filename = c("The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")
(name.without.json = str_sub(current.filename, start = 1, nchar(current.filename) - 5))
#Setting Song, Artist, album
(artist = str_split_i(name.without.json, "-", 1))
(album = str_split_i(name.without.json, "-", 2))
(track = str_split_i(name.without.json, "-", 3))
#Pulling JSON Data
essentia.output = paste("EssentiaOutput", current.filename, sep = "/")
(jsondata = fromJSON(essentia.output))
overall_loudness = jsondata$lowlevel$loudness_ebu128$integrated
spectral_energy = jsondata$lowlevel$spectral_energy$mean
dissonance = jsondata$lowlevel$dissonance$mean
pitch_salience = jsondata$lowlevel$pitch_salience$mean
bpm = jsondata$rhythm$bpm
beats_loudness = jsondata$rhythm$beats_loudness$mean
danceability = jsondata$rhythm$danceability
tuning_frequency = jsondata$tonal$tuning_frequency
name.with.json = list.files("EssentiaOutput")
#Making empty vectors
overall_loudness = c()
spectral_energy = c()
dissonance = c()
pitch_salience = c()
bpm = c()
beats_loudness = c()
danceability = c()
tuning_frequency = c()
name.without.json = c()
artist = c()
album = c()
track = c()
#Putting everything as vectors and filling them in
for(i in 1:length(list.files("EssentiaOutput"))){
current.filename = list.files("EssentiaOutput")[i]
(name.without.json[i] = str_sub(current.filename, start = 1, nchar(current.filename) - 5))
#Setting Song, Artist, album
(artist[i] = str_split_i(name.without.json[i], "-", 1))
(album[i] = str_split_i(name.without.json[i], "-", 2))
(track[i] = str_split_i(name.without.json[i], "-", 3))
#Pulling JSON Data
essentia.output = paste("EssentiaOutput", current.filename, sep = "/")
(jsondata = fromJSON(essentia.output))
overall_loudness[i] = jsondata$lowlevel$loudness_ebu128$integrated
spectral_energy[i] = jsondata$lowlevel$spectral_energy$mean
dissonance[i] = jsondata$lowlevel$dissonance$mean
pitch_salience[i] = jsondata$lowlevel$pitch_salience$mean
bpm[i] = jsondata$rhythm$bpm
beats_loudness[i] = jsondata$rhythm$beats_loudness$mean
danceability[i] = jsondata$rhythm$danceability
tuning_frequency[i] = jsondata$tonal$tuning_frequency
}
#Saving as data frame
data.from.all.songs = tibble(name.with.json, artist, album, track, overall_loudness, spectral_energy, dissonance, pitch_salience, bpm, beats_loudness, danceability, tuning_frequency)
valence = c()
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive") & !contains("not_aggresive")))) %>%
mutate(happy = rowMeans(select(., contains("happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive") & !contains("not_aggresive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive") & !contains("not_aggresive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
library(stringr)
library(jsonlite)
library(tidyverse)
current.filename = c("The Front Bottoms-Talon Of The Hawk-Au Revoir (Adios).json")
(name.without.json = str_sub(current.filename, start = 1, nchar(current.filename) - 5))
#Setting Song, Artist, album
(artist = str_split_i(name.without.json, "-", 1))
(album = str_split_i(name.without.json, "-", 2))
(track = str_split_i(name.without.json, "-", 3))
#Pulling JSON Data
essentia.output = paste("EssentiaOutput", current.filename, sep = "/")
(jsondata = fromJSON(essentia.output))
overall_loudness = jsondata$lowlevel$loudness_ebu128$integrated
spectral_energy = jsondata$lowlevel$spectral_energy$mean
dissonance = jsondata$lowlevel$dissonance$mean
pitch_salience = jsondata$lowlevel$pitch_salience$mean
bpm = jsondata$rhythm$bpm
beats_loudness = jsondata$rhythm$beats_loudness$mean
danceability = jsondata$rhythm$danceability
tuning_frequency = jsondata$tonal$tuning_frequency
name.with.json = list.files("EssentiaOutput")
#Making empty vectors
overall_loudness = c()
spectral_energy = c()
dissonance = c()
pitch_salience = c()
bpm = c()
beats_loudness = c()
danceability = c()
tuning_frequency = c()
name.without.json = c()
artist = c()
album = c()
track = c()
#Putting everything as vectors and filling them in
for(i in 1:length(list.files("EssentiaOutput"))){
current.filename = list.files("EssentiaOutput")[i]
(name.without.json[i] = str_sub(current.filename, start = 1, nchar(current.filename) - 5))
#Setting Song, Artist, album
(artist[i] = str_split_i(name.without.json[i], "-", 1))
(album[i] = str_split_i(name.without.json[i], "-", 2))
(track[i] = str_split_i(name.without.json[i], "-", 3))
#Pulling JSON Data
essentia.output = paste("EssentiaOutput", current.filename, sep = "/")
(jsondata = fromJSON(essentia.output))
overall_loudness[i] = jsondata$lowlevel$loudness_ebu128$integrated
spectral_energy[i] = jsondata$lowlevel$spectral_energy$mean
dissonance[i] = jsondata$lowlevel$dissonance$mean
pitch_salience[i] = jsondata$lowlevel$pitch_salience$mean
bpm[i] = jsondata$rhythm$bpm
beats_loudness[i] = jsondata$rhythm$beats_loudness$mean
danceability[i] = jsondata$rhythm$danceability
tuning_frequency[i] = jsondata$tonal$tuning_frequency
}
#Saving as data frame
data.from.all.songs = tibble(name.with.json, artist, album, track, overall_loudness, spectral_energy, dissonance, pitch_salience, bpm, beats_loudness, danceability, tuning_frequency)
valence = c()
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggresive = rowMeans(select(., contains("aggressive") & !contains("not_aggresive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad"))))
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad"))))
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(sad = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(sad = rowMeans(select(., contains("relaxed") & !contains("not_relaxed"))))
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(sad = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(sad = rowMeans(select(., contains("relaxed") & !contains("not_relaxed")))) %>%
mutate(sad = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(sad = rowMeans(select(., contains("electric") & !contains("not_electric")))) %>%
mutate(sad = rowMeans(select(., contains("instrumental") & !contains("not_instrumental"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relaxed") & !contains("not_relaxed")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electric") & !contains("not_electric")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relaxed") & !contains("not_relaxed")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electric") & !contains("not_electric")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relaxed") & !contains("not_relaxed")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electronic = rowMeans(select(., contains("electronic") & !contains("not_electronic")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental"))))
View(more.info)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relax") & !contains("not_relax")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electronic") & !contains("not_electronic")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental"))))
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relax") & !contains("not_relax")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electronic") & !contains("not_electronic")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental")))) %>%
mutate(timbreBright = eff_timbre_bright)
View(more.info)
?filter
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relax") & !contains("not_relax")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electronic") & !contains("not_electronic")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental")))) %>%
mutate(timbreBright = eff_timbre_bright) %>%
select(artist,album,track,valence,arousal,aggresive,happy,sad,party,relaxed,acoustic,electric,instrumental,timbreBright)
more.info <- read_csv("EssentiaModelOutput.csv") %>%
mutate(valence = rowMeans(select(., contains("valence")))) %>%
mutate(arousal = rowMeans(select(., contains("arousal")))) %>%
mutate(aggressive = rowMeans(select(., contains("aggressive") & !contains("not_aggressive")))) %>%
mutate(happy = rowMeans(select(., contains("happy") & !contains("not_happy")))) %>%
mutate(sad = rowMeans(select(., contains("sad") & !contains("not_sad")))) %>%
mutate(party = rowMeans(select(., contains("party") & !contains("not_party")))) %>%
mutate(relaxed = rowMeans(select(., contains("relax") & !contains("not_relax")))) %>%
mutate(acoustic = rowMeans(select(., contains("acoustic") & !contains("not_acoustic")))) %>%
mutate(electric = rowMeans(select(., contains("electronic") & !contains("not_electronic")))) %>%
mutate(instrumental = rowMeans(select(., contains("instrumental") & !contains("not_instrumental")))) %>%
mutate(timbreBright = eff_timbre_bright) %>%
select(artist,album,track,valence,arousal,aggressive,happy,sad,party,relaxed,acoustic,electric,instrumental,timbreBright)
View(more.info)
LIWCOutput = read_csv("LIWCOutput/LIWCOutput.csv")
merge(LIWCOutput, more.info)
merge(data.from.all.songs)
merge(data.from.all.songs,two)
two = merge(LIWCOutput, more.info)
merge(data.from.all.songs,two)
final.df = merge(data.from.all.songs,two)
View(final.df)
View(final.df)
final.df = merge(data.from.all.songs,two) |>
mutate(funct = function.) |>
!select(function.)
final.df = merge(data.from.all.songs,two) |>
mutate(funct = function.)
final.df = final.df |>
mutate(funct = function.)
View(final.df)
final.df = final.df |>
mutate(funct = function)
final.df = final.df |>
mutate(funct = function )
final.df = final.df |>
mutate(funct = function)
final.df = final.df |>
mutate(funct = function.)
View(LIWCOutput)
LIWCOutput$function
final.df = merge(data.from.all.songs,two) |>
mutate(funt = `function`) |>
!select(`function`)
final.df = merge(data.from.all.songs,two) |>
mutate(funt = `function`) |>
-select(`function`)
final.df = merge(data.from.all.songs,two) |>
mutate(funt = `function`) |>
select(-`function`)
